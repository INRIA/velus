# Menhir includes from CompCert
include CompCert/Makefile.menhir
comma:= ,
empty:=
space:= $(empty) $(empty)
MENHIR_INCLUDES:= $(subst $(space),$(comma),$(MENHIR_INCLUDES))

# flag to prevent coqc from taking CompCert directories into account
OTHERFLAGS=-exclude-dir CompCert -exclude-dir extraction/CompCert
export OTHERFLAGS

export MENHIR

COMPCERTDIR=CompCert
COMPCERTFLAGS=-s -C $(COMPCERTDIR) -j 8
COMPCERTTARGET=ia32-linux

PARSERDIR=Lustre/Parser

MAKEFILEAUTO=Makefile.auto

.PHONY: all clean compcert parser proof

all: compcert parser proof #extraction

# COMPCERT COQ
compcert: $(COMPCERTDIR)/Makefile.config
	@$(MAKE) $(COMPCERTFLAGS) compcert.ini driver/Version.ml proof

$(COMPCERTDIR)/Makefile.config:
	@cd $(COMPCERTDIR); ./configure $(COMPCERTTARGET)

# LUSTRE PARSER
parser:
	@$(MAKE) -s -C $(PARSERDIR) all

# VELUS COQ
proof: $(MAKEFILEAUTO)
	@test -f .depend || $(MAKE) -s -f $< depend
	@$(MAKE) -s -f $< all	  	

$(MAKEFILEAUTO): automake _CoqProject
	@./$< < _CoqProject > $@

# EXTRACTION
extraction: extraction/STAMP

extraction/STAMP: $(VOFILES) extraction/Extraction.v
	rm -f extraction/extracted/*.*
	$(COQEXEC) extraction/Extraction.v
	touch extraction/STAMP

# TOOLS
automake: tools/automake.ml
	@ocamlopt -o $@ $<

tools/automake.ml: tools/automake.mll
	@ocamllex $<

# CLEAN
clean: 
	@test -f $(MAKEFILEAUTO) && $(MAKE) -s -f $(MAKEFILEAUTO) $@
	@$(MAKE) -s -C $(PARSERDIR) $@
