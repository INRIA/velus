(* The button example from
   Colaco, Pagano, Pouzet,
   "Scade 6: A Formal Language for Embedded Critical Software Development" *)

type bk_color = Grey | Yellow | Green
type fr_color = Black | White

node button(button, lock, unlock, other : bool)
returns (background : bk_color; foreground : fr_color)
let
  automaton initially Unselected
  state Unselected do
    (background, foreground) = (Grey, White)
  unless lock then LockedUnselection
       | button then Preselected

  state Preselected do
    (background, foreground) = (Yellow, White)
  unless lock then LockedSelection
       | button or other then Unselected

  state LockedSelection do
    (background, foreground) = (Green, White)
  unless unlock then Preselected

  state LockedUnselection do
    (background, foreground) = (Grey, Black)
  unless unlock then Unselected
  end
tel

node buttons(lock : bool; b1, b2, b3 : bool)
returns (b1_bk, b2_bk, b3_bk : bk_color;
         b1_fr, b2_fr, b3_fr : fr_color;
         lockLight : bool)
var lockSig, unlockSig, buttonPressed : bool;
let
  automaton initially LockLow
  state LockLow do
    lockLight = false;
  unless lock then LockHigh

  state LockHigh do
    lockLight = true;
  unless lock then LockLow
  end;

  unlockSig = lockLight and lock;
  lockSig = not lockLight and lock;
  buttonPressed = b1 or b2 or b3;
  (b1_bk, b1_fr) = button(b1, lockSig, unlockSig, buttonPressed);
  (b2_bk, b2_fr) = button(b2, lockSig, unlockSig, buttonPressed);
  (b3_bk, b3_fr) = button(b3, lockSig, unlockSig, buttonPressed);
tel
