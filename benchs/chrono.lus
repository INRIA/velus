(* Examples from the paper
   "A Conservative Extension of Synchronous Data-flow with State Machines",
   ColaÃ§o, Pagano, and Pouzet, EMSOFT 2005 *)

node chrono (stst, rst : bool) returns (disp_1 : int; disp_2 : int);
var s, m : int; run : bool;
let
  last s = 0;
  last m = 0;
  last disp_1 = 0;
  last disp_2 = 0;

  automaton
    initially CHRONO
    state CHRONO do
      automaton
        initially STOP
        state STOP do
          s = 0 -> last s;
          m = 0 -> last m;
          run = false;
        unless stst continue START

        state START var d : int; do
          d = 0 fby (d + 1);
          s = if d < (0 fby d) then (last s + 1) mod 60
              else last s;
          m = if s < last s
              then (last m + 1) mod 60
              else last m;
          run = true;
        unless stst continue STOP
      end
    until rst and not run then CHRONO
  end;

  automaton
    initially TIME
    state TIME do
      disp_1 = s;
      disp_2 = m;
    until rst and run then LAP

    state LAP do
    until rst then TIME
  end;
tel
