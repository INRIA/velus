(* The stopwatch example from
   Colaco, Pagano, Pouzet,
   "Scade 6: A Formal Language for Embedded Critical Software Development" *)

node stopwatch(stst, rst, set, md : bool)
returns (hh, mm, ss : int; isLap : bool)
var
    isStart : bool; -- is chrono started ?
    isWatch : bool; -- is in clock mode ?
    isSet, isSetEnd : bool;
    last m : int = 0; last s : int = 0; last d : int = 0; -- chrono timers
    last wh : int = 0; last wm : int = 0; last w : int = 0; last ws : int = 0; -- clock timers
let
    w = 0 fby (w + 1) % 100;
    ws = 0 -> (if (w < (0 fby w))
               then (0 fby w) + 1 else (0 fby w)) % 60;

    automaton
    state Stop do
      isStart = false;
      (m, s, d) = (last m, last s, last d);
    unless stst and not isWatch continue Start
         | rst and not isLap and not isWatch then Stop

    state Start do
      isStart = true;
      d = (last d + 1) % 100;
      s = (if d < last d then last s + 1 else last s) % 60;
      m = if s < last s then last m + 1 else last m;
    unless stst and not isWatch continue Stop
    end;

    automaton
    state Count do
      isSet = false;
      isSetEnd = false;
      wm = 0 -> (if ws < last ws then last wm + 1 else last wm) % 60;
      wh = 0 -> (if wm < last wm then last wh + 1 else last wh) % 24;
    until set and isWatch then Set

    state Set do
      isSet = true;
      automaton
      state SetHours do
        isSetEnd = false;
        wh = (if stst then last wh + 1 else if rst then last wh + 23 else last wh) % 24
      until set and isWatch then SetMinutes
      state SetMinutes do
        isSetEnd = false;
        wm = (if stst then last wm + 1 else if rst then last wm + 23 else last wm) % 24
      until set and isWatch then SetEnd
      state SetEnd do isSetEnd = true
      end
    until isSetEnd continue Count
    end;

    automaton
    state DisplayWatch do
      isWatch = true;
      isLap = false;
      (hh, mm, ss) = (wh, wm, ws)
    unless md and not isSet continue DisplayStopWatch
    state DisplayStopWatch
    var last lm : int = 0; last ls : int = 0; last ld : int = 0; do
      isWatch = false;
      (hh, mm, ss) = (lm, ls, ld);

      automaton
      state StopWatch do
        isLap = false;
        (lm, ls, ld) = (m, s, d)
      until rst and isStart then Lap
      state Lap do
        isLap = true;
      until rst then StopWatch
      end

    unless md and not isSet continue DisplayWatch
    end
tel
